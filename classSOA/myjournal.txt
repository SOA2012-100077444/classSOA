PUSHING A REPOSITORY:

BASIC THINGS TO INPUT FOR FIRST PUSH:
1.	git init
2.	git remote add origin https://github.com/SOA2012-100077444/classSOA.git
3.	git commit –m “whatever”
4.	git push origin master

BASIC THINGS TO INPUT FOR COMMON PUSH:

1.	git init
2.	git remote add classSOA
3.	git commit –m “whatever”
4.	git push 

GOT A PROBLEM PUSHING MY DOCUMENTS

To make it work I had to type git remote add Documents… as below

$ git init

Reinitialized existing Git repository in /home/ubuntu/.git/

~$ git remote add Documents https://github.com/SOA2012-100077444/classSOA.git
~$ git commit -a

 On branch master
 Changes not staged for commit:

[…]

 no changes added to commit (use "git add" and/or "git commit -a")

 ~$ git push Documents

 Username for 'https://github.com': SOA2012-100077444

 Password for 'https://SOA2012-100077444@github.com': 
 To https://github.com/SOA2012-100077444/classSOA.git

    6952a5a..db99fcf  master -> master


PROBLEMS MET AND ATTEMPS TO SOLVE THEM:

 ~$ cd Documents
 ~/Documents$ git init

Reinitialized existing Git repository in /home/ubuntu/Documents/.git/

 ~/Documents$ git add classSOA
 ~/Documents$ git commit

# On branch master
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#	rottenpotatoes/

nothing added to commit but untracked files present (use "git add" to track)

 ~/Documents$ git push

Username for 'https://github.com': SOA2012-100077444
Password for 'https://SOA2012-100077444@github.com': 

Everything up-to-date

SOLVING “EVERYTHING UP-TO-DATE” PROBLEM:

 ~/Documents$ git remote show origin
∗	remote origin  
  Fetch URL: https://github.com/SOA2012-100077444/classSOA.git
  Push  URL: https://github.com/SOA2012-100077444/classSOA.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local ref configured for 'git push':
    master pushes to master (up to date)

 ~/Documents$ git checkout master

Already on 'master'
 
FAILED ATTEMPT 1
 ~/Documents$ git push

Username for 'https://github.com': SOA2012-100077444
Password for 'https://SOA2012-100077444@github.com': 

Everything up-to-date


FAILED ATTEMPT 2

 ~/Documents$ git push --all origin
Username for 'https://github.com': SOA2012-100077444
Password for 'https://SOA2012-100077444@github.com': 

Everything up-to-date


SUCCESSFUL ATTEMPT 

(I should have made changes in the repo before pushing, if not it says “everything is up-to-date”.  
 My local repository and the remote repo where exactly the same, that is why it keeps sending this message.)

 ~/Documents$ ls classSOA
 ~/Documents$ cd classSOA
 ~/Documents/classSOA$ nano aboutme.txt
 ~/Documents/classSOA$ ls
     aboutme.txt
 ~/Documents/classSOA$ cd ..
 ~/Documents$ git init

Reinitialized existing Git repository in /home/ubuntu/Documents/.git/

 ~/Documents$ git add classSOA
 ~/Documents$ git commit -m "Mytask"
   [master 4f1d461] Mytask
Committer: saasbook <saasbook@saasbook.(none)>

Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit –amend --reset-author

 1 file changed, 15 insertions(+)
 create mode 100644 classSOA/aboutme.txt

~/Documents$ git push

Username for 'https://github.com': SOA2012-100077444
Password for 'https://SOA2012-100077444@github.com': 
To https://github.com/SOA2012-100077444/classSOA.git
   416aad0..4f1d461  master -> master

CREATING A RAILS APP.

~$ cd Documents

~/Documents$ rails new myrottenpotatoes -T

Enter your password to install the bundled RubyGems to your system: 

    (the pass is "saasbook")

Your bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.

 ~/Documents$ cd myrottenpotatoes

        Start from the location “myrottenpotatoes”

~/Documents/myrottenpotatoes$
~/Documents/myrottenpotatoes$ vi Gemfile
  (press esc and type ZZ to exit Gemfile editing and save changes)
~/Documents/myrottenpotatoes$ bundle install --without production 
~/Documents/myrottenpotatoes$ rails server

    Open new terminal and type “rake route”
    Then edit “config/routes.rb”.
    cd to config
    vi routes.rb
    esc
    ZZ
  delete le file “public/index.html” if it exists (open document)
  Save the file and run rake routes again.

Create migration

~/Documents/myrottenpotatoes$ rails generate migration create_movies 
~/Documents/myrottenpotatoes$ db/migrate 

  Edit “…create_movies.rb”, save and exit file (http://pastebin.com/tmSkQX8b )

~/Documents/myrottenpotatoes$ rake db:migrate

  (Type rake db:migrate again to verify that it does nothing the second time.) 

Create a file named “movies.rb” with the following content (http://pastebin.com/PbFnAGt1 )

~$ cd Documents/myrottenpotatoes/app/models

  Make the file “movies.rb” by typing “nano movies.rb

  Stop the running application with Control-C and instead run rails console.
  (Rails server must keep running, [- the instruction “stop the running application with Control-C” being confusing])
~/Documents/myrottenpotatoes$ rails console

  (it will prompt “Loading development environment (Rails 3.1.0) irb(main):001:0>”)

  Input the follwing content (http://pastebin.com/2HETvZyz )
  Before continuing, seed the database with some movies
      (http://pastebin.com/hNB7kpWz )
